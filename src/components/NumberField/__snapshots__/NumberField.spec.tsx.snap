// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NumberField renders correctly 1`] = `
.c0 > label {
  color: #4E606A;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  height: 24px;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-bottom: 5px;
  font-size: 1rem;
  line-height: 16px;
}

.c0 .number-field {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-shadow: 0.5rem 0.5rem 1.25rem #00000029;
}

.c0 .number-field:focus-within {
  box-shadow: none;
}

.c0 .number-field__dropdown {
  min-width: 4.0625rem;
  max-width: 4.6875rem;
}

.c0 .number-field__dropdown select {
  border-right: none;
  box-shadow: none;
  margin: 0;
  padding: 0.5rem;
}

.c0 .number-field__dropdown .__icon {
  top: 1.125rem;
  right: 0.5rem;
  font-size: 0.75rem;
  color: #4E606A;
}

.c0 input {
  box-shadow: none;
  font-size: 0.875rem;
}

.c0 .number-field__description-msg,
.c0 .number-field__error-msg {
  -webkit-flex-basis: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
  margin-top: 0.625rem;
  color: #cdd5d8;
  line-height: 1.25rem;
}

.c0 .number-field__error-msg {
  font-size: 0.875rem;
  color: #EB4820;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-size: 1rem;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  position: relative;
  width: 100%;
}

.c1 > * {
  margin: 0 0 0.3125rem 0;
}

.c1 > :last-child {
  margin: 0;
}

.c1 .dropdown__label {
  color: #4E606A;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 1.5rem;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  font-size: 1rem;
  line-height: 16px;
}

.c1 .dropdown__select-wrapper {
  position: relative;
  width: 100%;
}

.c1 .dropdown__select-wrapper__select {
  width: 100%;
  height: 2.8125rem;
  padding: 0.5rem 1rem 0.5rem 1rem;
  opacity: 1;
  outline: none;
  background-color: #FFF;
  font-size: 0.875rem;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  box-shadow: 0.5rem 0.5rem 1.25rem #00000029;
  border: 0.03125rem solid #95A1A6;
  border-radius: 0;
}

.c1 .dropdown__select-wrapper__select.select--error {
  border: 0.03125rem solid #EB4820;
}

.c1 .dropdown__select-wrapper__select:focus,
.c1 .dropdown__select-wrapper__select.select--error {
  box-shadow: none;
}

.c1 .dropdown__icon {
  position: absolute;
  right: 1.75rem;
  bottom: 50%;
  -webkit-transform: translateY(50%);
  -ms-transform: translateY(50%);
  transform: translateY(50%);
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
  pointer-events: none;
  color: #00a5b5;
}

.c1 .dropdown__description-msg,
.c1 .dropdown__error-msg {
  -webkit-flex-basis: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
  color: #95A1A6;
  line-height: 1.25rem;
}

.c1 .dropdown__error-msg {
  font-size: 0.875rem;
  color: #EB4820;
}

.c1.dropdown--small .dropdown__icon {
  position: absolute;
  right: 0.75rem;
  bottom: 50%;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
  font-size: 0.625rem;
  line-height: 10px;
  color: #4E606A;
}

.c3 {
  width: 100%;
}

.c3 > * {
  margin: 0 0 0.625rem 0;
}

.c3 > :last-child {
  margin: 0;
}

.c3 > label {
  color: #4E606A;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  height: 24px;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-bottom: 5px;
  font-size: 1rem;
  line-height: 16px;
}

.c3 > input {
  width: 100%;
  height: 2.8125rem;
  padding: 0.5rem 1rem 0.5rem 1rem;
  box-shadow: 0.03125rem 0.03125rem 0.078125rem #00000029;
  border: 0.0625rem solid #95A1A6;
  outline: none;
}

.c3 > input.input--error {
  border: 0.0625rem solid #EB4820;
}

.c3 > input:focus,
.c3 > input.input--error {
  box-shadow: none;
}

<div
  className="c0"
>
  <div
    className="number-field"
  >
    <div
      className="c1 dropdown dropdown--small number-field__dropdown"
    >
      <div
        className="dropdown__select-wrapper"
      >
        <select
          className="dropdown__select-wrapper__select"
          onChange={[Function]}
          value="DEFAULT"
        >
          
          <option
            value="00381"
          >
            +381
          </option>
          <option
            value="00434"
          >
            +434
          </option>
          <option
            value="00321"
          >
            +321
          </option>
          <option
            value="0044"
          >
            +44
          </option>
          <option
            value="001"
          >
            +1
          </option>
        </select>
        <div
          className="c2 dropdown__icon"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 fa-1x "
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </div>
      </div>
      
      
    </div>
    <div
      className="c3"
    >
      <input
        className=""
        id="undefined.number"
        name="undefined.number"
        onChange={[Function]}
        onKeyPress={[Function]}
        type="text"
        value=""
      />
    </div>
  </div>
  <div
    className="number-field__description-msg"
  >
    Description message
  </div>
  
</div>
`;
